knitr::opts_chunk$set(echo = TRUE)
# packages needed for chapter 2
library(boot)
library(ggplot2)
# Import the datasets needed for chapter 2
PSDS_PATH <- file.path('C:/Users/fabia/Desktop', 'psds_data')
loans_income <- read.csv(file.path(PSDS_PATH, 'data', 'loans_income.csv'))[,1]
sp500_px <- read.csv(file.path(PSDS_PATH, 'data', 'sp500_px.csv'))
x <- seq(from=-3, to=3, length=300)
gauss <- dnorm(x)
#png(filename=file.path(PSDS_PATH, 'figures', 'normal_density.png'),  width = 4, height=5, units='in', res=300)
par(mar=c(3, 3, 0, 0)+.1)
plot(x, gauss, type="l", col='blue', xlab='', ylab='', axes=FALSE)
polygon(x, gauss, col='blue')
dev.off()
png(filename=file.path(PSDS_PATH, 'figures', 'samp_hist.png'), width = 200, height = 250)
norm_samp <- rnorm(100)
par(mar=c(3, 3, 0, 0)+.1)
hist(norm_samp, axes=FALSE, col='red', main='')
dev.off()
x <- seq(from=-3, to=3, length=300)
gauss <- dnorm(x)
#png(filename=file.path(PSDS_PATH, 'figures', 'normal_density.png'),  width = 4, height=5, units='in', res=300)
par(mar=c(3, 3, 0, 0)+.1)
plot(x, gauss, type="l", col='blue', xlab='', ylab='', axes=FALSE)
polygon(x, gauss, col='blue')
dev.off()
#png(filename=file.path(PSDS_PATH, 'figures', 'samp_hist.png'), width = 200, height = 250)
norm_samp <- rnorm(100)
par(mar=c(3, 3, 0, 0)+.1)
hist(norm_samp, axes=FALSE, col='red', main='')
dev.off()
x <- seq(from=-3, to=3, length=300)
gauss <- dnorm(x)
#png(filename=file.path(PSDS_PATH, 'figures', 'normal_density.png'),  width = 4, height=5, units='in', res=300)
par(mar=c(3, 3, 0, 0)+.1)
plot(x, gauss, type="l", col='blue', xlab='', ylab='', axes=FALSE)
polygon(x, gauss, col='blue')
dev.off()
png(filename=file.path(PSDS_PATH, 'figures', 'samp_hist.png'), width = 200, height = 250)
norm_samp <- rnorm(100)
par(mar=c(3, 3, 0, 0)+.1)
hist(norm_samp, axes=FALSE, col='red', main='')
dev.off()
## Code snippet 2.1
stat_fun <- function(x, idx) median(x[idx])
boot_obj <- boot(loans_income, R = 1000, statistic=stat_fun)
# take a simple random sample
samp_data <- data.frame(income=sample(loans_income, 1000),
type='data_dist')
# take a sample of means of 5 values
samp_mean_05 <- data.frame(
income = tapply(sample(loans_income, 1000*5),
rep(1:1000, rep(5, 1000)), FUN=mean),
type = 'mean_of_5')
# take a sample of means of 20 values
samp_mean_20 <- data.frame(
income = tapply(sample(loans_income, 1000*20),
rep(1:1000, rep(20, 1000)), FUN=mean),
type = 'mean_of_20')
# bind the data.frames and convert type to a factor
income <- rbind(samp_data, samp_mean_05, samp_mean_20)
income$type = factor(income$type,
levels=c('data_dist', 'mean_of_5', 'mean_of_20'),
labels=c('Data', 'Mean of 5', 'Mean of 20'))
# plot the histograms
ggplot(income, aes(x=income)) +
geom_histogram(bins=40) +
facet_grid(type ~ .)
## Code for Figure 6
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0206.png'),  width = 3, height=4, units='in', res=300)
ggplot(income, aes(x=income)) +
geom_histogram(bins=40) +
facet_grid(type ~ .) +
theme_bw()
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# packages needed for chapter 3
library(ggplot2)
library(dplyr)
library(lmPerm)
install.packages("lmPerm")
# packages needed for chapter 3
library(ggplot2)
library(dplyr)
library(lmPerm)
# Import the datasets needed for chapter 3
PSDS_PATH <- file.path('C:/Users/fabia/Desktop', 'psds_data')
session_times <- read.csv(file.path(PSDS_PATH, 'data', 'web_page_data.csv'))
session_times[,2] <- session_times[,2] * 100
four_sessions  <- read.csv(file.path(PSDS_PATH, 'data', 'four_sessions.csv'))
click_rate <-  read.csv(file.path(PSDS_PATH, 'data', 'click_rates.csv'))
imanishi <-  read.csv(file.path(PSDS_PATH, 'data', 'imanishi_data.csv'))
View(session_times)
session_times <- read.csv(file.path(PSDS_PATH, 'data', 'web_page_data.csv'))
session_times[,2] <- session_times[,2] * 100
View(four_sessions)
View(click_rate)
View(imanishi)
## Code snippet 3.1
ggplot(session_times, aes(x=Page, y=Time)) +
geom_boxplot()
View(session_times)
## Code snippet 3.1
ggplot(session_times, aes(x=Page, y=Time)) +
geom_boxplot()
## Code for Figure 3
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0303.png'),  width = 4, height=4, units='in', res=300)
ggplot(session_times, aes(x=Page, y=Time)) +
geom_boxplot() +
labs(y='Time (in seconds)') +
theme_bw()
dev.off()
## Code for Figure 3
#png(filename=file.path(PSDS_PATH, 'figures', 'psds_0303.png'),  width = 4, height=4, units='in', res=300)
ggplot(session_times, aes(x=Page, y=Time)) +
geom_boxplot() +
labs(y='Time (in seconds)') +
theme_bw()
dev.off()
ggplot(session_times, aes(x=Page, y=Time)) +
geom_boxplot() +
labs(y='Time (in seconds)') +
theme_bw()
## Code for Figure 3
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0303.png'),  width = 4, height=4, units='in', res=300)
ggplot(session_times, aes(x=Page, y=Time)) +
geom_boxplot() +
labs(y='Time (in seconds)') +
theme_bw()
dev.off()
mean_a <- mean(session_times[session_times['Page']=='Page A', 'Time'])
mean_b <- mean(session_times[session_times['Page']=='Page B', 'Time'])
mean_b - mean_a
## Permutation test example with stickiness
perm_fun <- function(x, n1, n2)
{
n <- n1 + n2
idx_b <- sample(1:n, n1)
idx_a <- setdiff(1:n, idx_b)
mean_diff <- mean(x[idx_b]) - mean(x[idx_a])
return(mean_diff)
}
## Code for Figure 4
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0304.png'),  width = 4, height=4, units='in', res=300)
perm_diffs <- rep(0, 1000)
for(i in 1:1000)
perm_diffs[i] = perm_fun(session_times[,'Time'], 21, 15)
par(mar=c(4,4,1,0)+.1)
hist(perm_diffs, xlab='Session time differences (in seconds)', main='')
abline(v = mean_b - mean_a)
dev.off()
mean(perm_diffs > (mean_b - mean_a))
## Code for Figure 5
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0305.png'),  width = 4, height=4, units='in', res=300)
obs_pct_diff <- 100*(200/23739 - 182/22588)
conversion <- c(rep(0, 45945), rep(1, 382))
perm_diffs <- rep(0, 1000)
for(i in 1:1000)
perm_diffs[i] = 100*perm_fun(conversion, 23739, 22588 )
hist(perm_diffs, xlab='Conversion rate (percent)', main='')
abline(v = obs_pct_diff, lty=2, lwd=1.5)
text("  Observed\n  difference", x=obs_pct_diff,  y=par()$usr[4]-20, adj=0)
dev.off()
mean(perm_diffs > obs_pct_diff)
mean(perm_diffs > obs_pct_diff)
prop.test(x=c(200,182), n=c(23739,22588), alternative="greater")
## Histogram of resample
## t-test
t.test(Time ~ Page, data=session_times, alternative='less' )
## session times
## four groups ANOVA
## Code for Figure 6
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0306.png'),  width = 4, height=4, units='in', res=300)
ggplot(four_sessions, aes(x=Page, y=Time)) +
geom_boxplot() +
labs(y='Time (in seconds)') +
theme_bw()
dev.off()
summary(aovp(Time ~ Page, data=four_sessions))
summary(aov(Time ~ Page, data=four_sessions))
## Chi square test
clicks <- matrix(click_rate$Rate, nrow=3, ncol=2, byrow=TRUE)
dimnames(clicks) <- list(unique(click_rate$Headline), unique(click_rate$Click))
chisq.test(clicks, simulate.p.value=TRUE)
chisq.test(clicks, simulate.p.value=FALSE)
## Code for Figure 7
x <- seq(1, 30, length=100)
chi <- data.frame(df = factor(rep(c(1, 2, 5, 10), rep(100, 4))),
x = rep(x, 4),
p = c(dchisq(x, 1), dchisq(x, 2), dchisq(x, 5), dchisq(x, 20)))
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0307.png'),  width = 5, height=3, units='in', res=300)
ggplot(chi, aes(x=x, y=p)) +
geom_line(aes(linetype=df)) +
theme_bw() +
labs(x='', y='')
dev.off()
## Fishers exact test
fisher.test(clicks)
## Tufts example
## Code for Figure 8
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0308.png'),  width = 4, height=4, units='in', res=300)
imanishi$Digit <- factor(imanishi$Digit)
ggplot(imanishi, aes(x=Digit, y=Frequency)) +
geom_bar(stat="identity") +
theme_bw()
dev.off()
## Code for Figure 7
x <- seq(1, 30, length=100)
chi <- data.frame(df = factor(rep(c(1, 2, 5, 10), rep(100, 4))),
x = rep(x, 4),
p = c(dchisq(x, 1), dchisq(x, 2), dchisq(x, 5), dchisq(x, 20)))
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0307.png'),  width = 5, height=3, units='in', res=300)
ggplot(chi, aes(x=x, y=p)) +
geom_line(aes(linetype=df)) +
theme_bw() +
labs(x='', y='')
dev.off()
## Fishers exact test
fisher.test(clicks)
## Tufts example
## Code for Figure 8
png(filename=file.path(PSDS_PATH, 'figures', 'psds_0308.png'),  width = 4, height=4, units='in', res=300)
imanishi$Digit <- factor(imanishi$Digit)
ggplot(imanishi, aes(x=Digit, y=Frequency)) +
geom_bar(stat="identity") +
theme_bw()
dev.off()
# Import the datasets needed for chapter 3
PSDS_PATH <- file.path('C:/Users/fabia/Desktop', 'psds_data')
session_times <- read.csv(file.path(PSDS_PATH, 'data', 'web_page_data.csv'))
session_times[,2] <- session_times[,2] * 100
four_sessions  <- read.csv(file.path(PSDS_PATH, 'data', 'four_sessions.csv'))
click_rate <-  read.csv(file.path(PSDS_PATH, 'data', 'click_rates.csv'))
imanishi <-  read.csv(file.path(PSDS_PATH, 'data', 'imanishi_data.csv'))0.
